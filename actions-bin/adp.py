import sys
import os
import json
import requests

with open(sys.argv[1], 'r', encoding='utf-8') as f:
    all = f.readline()
    obj = json.loads(all)
    u = obj['URL']
    i = obj['id']
    h = {}
    h['Content-type'] = 'application/json'
    h['CVE-API-ORG'] = 'secretariat-reference'
    h['CVE-API-USER'] = 'u@secretariat-reference.example.com'
    h['CVE-API-KEY'] = os.environ['A_API_KEY']
    cve = sys.argv[1][2:]
    print('Retrieving ' + cve)
    s = 'https://a.vulnerability.info/api/cve/'
    uget = s + cve
    r = requests.get(uget)
    gr = r.json()
    gs = r.status_code
    print(cve + ': GET status ' + str(gs) + ' for ' + json.dumps(gr))
    if gs != 200:
        print(cve + ' record is not yet published; cannot add ADP container')
        exit()
    oldrefs = set()
    for oldref in gr['containers']['cna']['references']:
        ru = oldref['url']
        print(cve + ': from CNA: ' + ru)
        oldrefs.add(ru)

    has_adp_container = False
    # this is zero because there is only one ADP in the system today
    index = 0
    if 'adp' in gr['containers'] and 'references' in gr['containers']['adp'][index]:
        has_adp_container = True
        for oldref in gr['containers']['adp'][index]['references']:
            ru = oldref['url']
            print(cve + ': from ADP: ' + ru)
            oldrefs.add(ru)
    else:
        print(cve + ' has no ADP container yet, or one without references')
    if u in oldrefs:
        print(cve + ': found reference ' + u + ' is a duplicate')
    else:
        print(cve + ': found reference ' + u + ' is new')        
        uput = s + cve + '/adp'
        j = '{"adpContainer": {"references": [{"url": "' + u + '"}]}}'
        if has_adp_container:
            current_adp_c = gr['containers']['adp'][index]
            s_jref = '{"url": "' + u + '"}'
            jref = json.loads(s_jref)
            current_adp_c['references'].append(jref)
            j = '{"adpContainer": {"references": ' + json.dumps(current_adp_c['references']) + '}}'            
        print(cve + ': Doing PUT of ADP container ' + j)
        r = requests.put(uput, headers=h, data=j)
        pr = r.json()
        ps = r.status_code
        print(cve + ': PUT status ' + str(ps) + ' for ' + json.dumps(pr))
